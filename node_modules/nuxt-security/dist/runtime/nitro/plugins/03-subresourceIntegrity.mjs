import { useStorage, defineNitroPlugin, getRouteRules } from "#imports";
import { isPrerendering } from "../utils/index.mjs";
export default defineNitroPlugin((nitroApp) => {
  nitroApp.hooks.hook("render:html", async (html, { event }) => {
    const { security } = getRouteRules(event);
    if (!security?.sri) {
      return;
    }
    const prerendering = isPrerendering(event);
    const storageBase = prerendering ? "build" : "assets";
    const sriHashes = await useStorage(storageBase).getItem("integrity:sriHashes.json") || {};
    const sections = ["body", "bodyAppend", "bodyPrepend", "head"];
    const cheerios = event.context.cheerios;
    for (const section of sections) {
      cheerios[section].forEach(($) => {
        $("script").each((i, script) => {
          const scriptAttrs = $(script).attr();
          const src = scriptAttrs?.src;
          const integrity = scriptAttrs?.integrity;
          if (src && !integrity) {
            const hash = sriHashes[src];
            if (hash) {
              $(script).attr("integrity", hash);
            }
          }
        });
        $("link").each((i, link) => {
          const linkAttrs = $(link).attr();
          const rel = linkAttrs?.rel;
          if (rel === "stylesheet" || rel === "preload" || rel === "modulepreload") {
            const href = linkAttrs?.href;
            const integrity = linkAttrs?.integrity;
            if (href && !integrity) {
              const hash = sriHashes[href];
              if (hash) {
                $(link).attr("integrity", hash);
              }
            }
          }
        });
      });
    }
  });
});
